const path = require("path")
const fs = require('fs')


class Handler {
  constructor(data) {
    let bot = data.bot;
    let aoijs = data.aoijs;
    let variables = data.varfile||"none";
    let callbacks = data.callbackfile || "none";
    let commands = data.commandsfolder || "none";
    let status = data.statusfolder || "none";
    console.log(`════════ ≪ AOI.JS HANDLER READY! ≫ ════════`);

    const loader = new aoijs.LoadCommands(bot);
    
    //commands
    
    if(commands == "none"){
      console.log("Command folder was not provided!");
    }
    else {
      loader.load(bot.cmd,path.join(process.cwd(), commands));
      console.log(`════════ ≪ Loaded Commands ["${commands}"] ≫ ════════`);
    }

    //variables

    if(variables=="none"){
      console.log("Variables file was not provided!")
    }
    else{
      let vf = path.join(process.cwd(),variables);
      bot.variables(require(vf));
      console.log(`════════ ≪ Loaded Variables ["${variables}"] ≫ ════════`);
    
    }

    //callbacks

    if (callbacks=="none"){
      console.log("Callbacks file was not provided!");
    }
    else{
      let cf = path.join(process.cwd(),callbacks);
      require(cf)(bot);
      console.log(`════════ ≪ Loaded Callbacks ["${callbacks}"] ≫ ════════`);
    }

    //status 

    if(status=="none"){
      console.log("Status folder was not provided!");
    }
    else{
      let files = fs.readdirSync(path.join(process.cwd(),status)).filter(file => file.endsWith('js'))
      files.forEach( x => {
        bot.status({
          text:require(path.join(process.cwd(),`/status/${x}`)).text, // This sets the message status
          type:require(path.join(process.cwd(),`/status/${x}`)).type,
          time:require(path.join(process.cwd(),`/status/${x}`)).time
        });
      

      });
      console.log(`════════ ≪ Loaded Statuses ["${status}"] ≫ ════════`);
    }

    console.log(`════════ ≪ AOI.JS HANDLER LOADED! ≫ ════════`);
  }

}

module.exports = {
  Handler
}