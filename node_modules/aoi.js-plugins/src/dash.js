const crypto = require('crypto')

const DiscordOauth2 = require("discord-oauth2");

// outpout: [ 'SEND_MESSAGES', 2048n ]
class Dash {
  constructor(name) {
    let bot = name.bot;

    let clientid = name.clientID;
    let secret = name.clientSecret;
    let redirectUri= name.redirectURI;

    
    this.bot=bot;
    this.id=clientid;
    this.sc=secret;
    this.rd=redirectUri;
    const oauth = new DiscordOauth2({
      clientId: clientid,
      clientSecret: secret,
      redirectUri: redirectUri 
    });
    this.oauth=oauth;
    console.log(oauth)

  }
  generateUrl() {
    let oauth=this.oauth;
    const url = oauth.generateAuthUrl({
      scope: ["identify", "guilds"],
      state: crypto.randomBytes(16).toString("hex")
    });
    
    return(url);
  
    }
  async getAccessToken(code) {
    let oauth=this.oauth;
  
    let tuff = await oauth.tokenRequest({
    code,
  	scope: "identify guilds",
  	grantType: "authorization_code"
    })
    
    return(tuff.access_token);
  }
  async getUser(access_token) {
    let a =access_token;
    let oauth=this.oauth;
    let v = oauth.getUser(a);
    return(v);
  
  }
  async getGuilds(access_token) {
    let a =access_token;
    let oauth=this.oauth;
    let v = await oauth.getUserGuilds(a);
    return(v);
  
  }
  async getAdminGuilds(access_token) {
    
    let a =access_token;
    let oauth=this.oauth;
    let myObj = await oauth.getUserGuilds(a);
    var aa = [];
    /*
    for (let i = 0; i < myObj.length; i++) {
      
    }*/
    
    for (let [i, guild] of Object.entries(myObj)) {
  
  
      if ((guild.permissions & 0x8) !=0) {
        aa.push(guild.id)
  
      }
  
    };
  
    return(aa);
    
  
  
  }
  async getCommonAdminGuilds(access_token) {
    
    let a =access_token;
    let oauth=this.oauth;
    let myObj = await oauth.getUserGuilds(a);
    var ag = [];
    var bb=[];
    let bot = this.bot;
    
    for (let i = 0; i < bot.guilds.cache.size; i++) {
      bb.push(bot.guilds.cache.map(z=>z)[i].id)
    }
  
    for (let [i, guild] of Object.entries(myObj)) {
  
   
      if ((guild.permissions & 0x8) !=0 && bb.includes(guild.id)) {
        ag.push(guild.id)
  
      }
  
    };
  
  
  
  
    return(ag);
    
  
    
  }

}


module.exports = {
  Dash
}